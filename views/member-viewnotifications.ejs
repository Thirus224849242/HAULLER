

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Notifications</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&family=Open+Sans&display=swap" rel="stylesheet">
  <style>
    body {
      background: lightblue no-repeat center center fixed;
      background-size: cover;
      min-height: 100vh;
      font-family: 'Open Sans', sans-serif;
      padding: 20px;
      color: white;
    }

    .glass-card {
      background-color: white;
      backdrop-filter: blur(10px);
      border-radius: 15px;
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      border: 1px solid rgba(255, 255, 255, 0.18);
      padding: 25px;
      margin: auto;
      max-width: 900px;
      color: rgb(0, 0, 0);
    }

    h1 {
      font-family: 'Montserrat', sans-serif;
      font-weight: 700;
      text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    ul#notificationList {
      list-style: none;
      padding: 0;
      margin-top: 20px;
    }

    ul#notificationList li {
      background: rgba(255, 255, 255, 0.85);
      border-radius: 10px;
      padding: 15px 20px;
      margin-bottom: 12px;
      color: #000;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .notification-content {
      flex-grow: 1;
    }

    .notification-actions button {
      margin-left: 10px;
    }

    .btn-back {
      font-weight: bold;
      padding: 10px 20px;
    }

    .top-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .notification-counter {
      font-size: 1rem;
      font-weight: bold;
      background: crimson;
      color: white;
      border-radius: 20px;
      padding: 4px 12px;
    }

    @media (max-width: 576px) {
      .top-actions {
        flex-direction: column;
        gap: 15px;
      }
    }
  </style>
</head>
<body>

  <div class="glass-card">
    <div class="top-actions mb-3">
      <div>
       
        <span class="notification-counter">Total: <%= data.length %></span>
      </div>
      <div>
        <button class="btn btn-secondary btn-back" onclick="window.location.href = '/member/viewadds';">‚Üê Back</button>
        <% if (data.length > 0) { %>
          <button class="btn btn-danger" onclick="markAllRead()">Mark All as Read</button>
        <% } %>
      </div>
    </div>

                   <ul id="notificationList">
      <% if (data.length > 0) { %>
        <% data.forEach(function(n) { %>
            <a href="/member/view/<%= n.adId %>">
        <li data-id="<%= n._id %>">
  <div class="notification-content">
    <a href="/member/view/<%= n.adId %>" style="text-decoration: none; color: inherit;">
      <strong><%= n.title %></strong> - <%= n.message %>
      <em>(<%= n.timeAgo %>)</em>
    </a>
  </div>
  <div class="notification-actions">
    <a href="/member/deletenot/<%= n._id %>" class="btn btn-sm btn-danger mb-1"><%= n._id %></a>
  </div>
</li>

           
        <% }) %>
      <% } else { %>
        <li>No notifications yet.</li>
      <% } %>
    </ul>               
                            
 
  </div>

  <!-- Socket.IO -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const userId = "<%= id %>";
    socket.emit('joinRoom', userId);

    socket.on('Notification', function(data) {
      const li = document.createElement('li');
      li.setAttribute('data-id', data._id);
      li.innerHTML = `
        <div class="notification-content">
          <strong>${data.title}</strong> - ${data.message}
          <em>(${data.timeAgo})</em>
        </div>
        <div class="notification-actions">
          <button class="btn btn-sm btn-outline-danger" onclick="deleteNotification('${data._id}')">Delete</button>
        </div>
      `;
      document.getElementById('notificationList').prepend(li);
      updateCounter(1);
    });

    function markAllRead() {
     if (confirm("Are you sure you want to delete all your ads? This action cannot be undone.")) {
                window.location.href = 'dnot';
            }
     
          document.getElementById('notificationList').innerHTML = '<li>All notifications marked as read.</li>';
         
      
    }

    function deleteNotification(id) {
    
    }

    function updateCounter(change, reset = false) {
      const counter = document.querySelector('.notification-counter');
      let total = parseInt(counter.textContent.replace(/\D/g, '')) || 0;
      counter.textContent = reset ? 'Total: 0' : `Total: ${total + change}`;
    }
     
  </script>

</body>
</html>
